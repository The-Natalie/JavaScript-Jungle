{"version":3,"sources":["Header.js","QandA.js","Info.js","SubscriptionForm.js","Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","id","className","src","alt","QandA","animateIn","initiallyVisible","Info","href","style","color","fontWeight","target","rel","SubscriptionForm","sp-id","sp-hash","sp-lang","sp-show-options","noValidate","type","sp-type","name","placeholder","sp-tips","required","React","Component","Footer","currentYear","Date","getFullYear","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"oMAWeA,MATf,WACE,OACC,yBAAKC,GAAG,UACP,yBAAKC,UAAU,WACd,yBAAKD,GAAG,OAAQE,IAAI,uBAAuBC,IAAI,2BAFjD,IAE8E,+B,gBC2BlEC,MA9Bf,WACE,OACC,6BACC,yBAAKJ,GAAG,UACP,kBAAC,IAAD,CAAiBK,UAAU,eAAeC,kBAAkB,GAC3D,qFAIF,yBAAKN,GAAG,UACP,kBAAC,IAAD,CAAiBK,UAAU,eAAeC,kBAAkB,GAC3D,uQAIF,yBAAKN,GAAG,UACP,kBAAC,IAAD,CAAiBK,UAAU,eAAeC,kBAAkB,GAC3D,yIAIF,yBAAKN,GAAG,UACP,kBAAC,IAAD,CAAiBK,UAAU,OAAOC,kBAAkB,GACnD,qECNSC,MAlBf,WACE,OACC,yBAAKP,GAAG,QACP,mTACA,6BAAM,6BADN,4FAE0F,uBAAGQ,KAAK,qCAAR,cAF1F,iLAGA,6BAAM,6BAHN,uGAKC,6BAAM,6BALP,WAMS,0BAAMC,MAAO,CAACC,MAAM,UAAUC,WAAW,SAAzC,qBANT,gEAQA,yBAAKX,GAAG,iBACP,uBAAGQ,KAAK,kBAAkBI,OAAO,SAASC,IAAI,uBAAsB,yBAAMb,GAAG,YAAYE,IAAI,6BAA6BC,IAAI,wBC2BpHW,E,uKA7BX,OACE,yBAAKb,UAAU,iBACb,yBAAKD,GAAG,iBAAiBe,QAAM,SAASC,UAAQ,mEAAmEC,UAAQ,KAAKhB,UAAU,wCAAwCiB,kBAAgB,8uBAChM,6BAAK,0CACL,0BAAMC,WAAW,GAAGlB,UAAU,kDAC5B,yBAAKA,UAAU,0BACb,yBAAKA,UAAU,cACb,+BAGF,yBAAKA,UAAU,YAAYc,QAAM,2CAC/B,2BAAOd,UAAU,oBAAmB,uCAAmB,sCACvD,2BAAOmB,KAAK,QAAQC,UAAQ,QAAQC,KAAK,eAAerB,UAAU,mBAAmBsB,YAAY,qBAAqBC,UAAQ,oFAAoFC,SAAS,cAE7N,yBAAKxB,UAAU,YAAYc,QAAM,2CAC/B,2BAAOd,UAAU,oBAAmB,sCAAkB,sCACtD,2BAAOmB,KAAK,OAAOC,UAAQ,OAAOC,KAAK,sBAAsBrB,UAAU,mBAAmBsB,YAAY,YAAYC,UAAQ,gDAAgDC,SAAS,eAGvL,yBAAKxB,UAAU,gCAAgCc,QAAM,2CACnD,4BAAQf,GAAG,0CAA0CC,UAAU,aAA/D,kB,GA7BiByB,IAAMC,WCStBC,MAVf,WACC,IAAMC,GAAc,IAAIC,MAAOC,cAE/B,OACC,4BAAQ9B,UAAU,UACf,mCAAW4B,EAAX,wBCeUG,E,uKAZb,OACC,6BACC,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACC,kBAAC,EAAD,W,GATaN,IAAMC,WCKJM,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.cb460d5f.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Header() {\r\n  return (\r\n  \t<div id=\"header\">\r\n\t\t  <div className=\"skewed\"></div>\r\n\t  \t\t<img id=\"logo\"  src=\"images/JS_J_Logo.png\" alt=\"JavaScript Jungle Logo\"  /> <br />  \t\t\r\n  \t</div>\r\n  )\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport ScrollAnimation from \"react-animate-on-scroll\";\r\n\r\nfunction QandA() {\r\n  return (\r\n  \t<div>\r\n\t  \t<div id=\"query1\">\r\n\t  \t\t<ScrollAnimation animateIn=\"bounceInLeft\" initiallyVisible={false}>\r\n\t\t\t  \t<p>Would you like to have quick refreshers sent to you?</p>\r\n\t\t\t  </ScrollAnimation>\r\n\t  \t</div>\r\n\t  \t\r\n\t  \t<div id=\"query2\">\r\n\t  \t\t<ScrollAnimation animateIn=\"bounceInLeft\" initiallyVisible={false}>\r\n\t\t\t  \t<p>Have you ever worked on a problem and thought there HAS to be a better way to do this, then later realized that there WAS a better way to do it? If only you had known that obscure method or property that was never taught to you...</p>\r\n\t\t\t  </ScrollAnimation>\r\n\t  \t</div>\r\n\r\n\t  \t<div id=\"query3\">\r\n\t  \t\t<ScrollAnimation animateIn=\"bounceInLeft\" initiallyVisible={false}>\r\n\t  \t\t\t<p>Are you overwhelmed trying to learn all things JavaScript and just want to learn a little bit at a time?</p>\r\n\t  \t\t</ScrollAnimation>\r\n\t  \t</div>\r\n\r\n\t  \t<div id=\"answer\">\r\n\t  \t\t<ScrollAnimation animateIn=\"tada\" initiallyVisible={true}>\r\n\t\t\t  \t<p>Then this email series is for you!</p>\r\n\t\t\t  </ScrollAnimation>\r\n\t  \t</div>\r\n  \t</div>\r\n  )\r\n}\r\n\r\nexport default QandA;","import React from \"react\";\r\n\r\nfunction Info() {\r\n  return (\r\n  \t<div id=\"info\">\r\n  \t\t<p>We'll be exploring the lesser-known JavaScript terms (at least for us newbies) - one per email. These are the methods and properties that aren't usually taught in beginner or even intermediate courses. Some of them might be familiar to you, but we'll go over them just in case.\r\n\t\t\t\t<br /><br />\r\n  \t\t\tI'm no JavaScript expert...yet. So, if you see something wrong, please don't hesitate to <a href=\"mailto:guide@javascriptjungle.com\">correct me</a>! I'm still learning the lingo, so I'll more than likely call something by the wrong name. But, hopefully writing this newsletter will help me. And maybe it'll help you, too. \r\n\t\t\t\t<br /><br />\r\n  \t\t\tI'll try to consistently send out a newsletter throughout the week, but we'll take the weekends off.\r\n  \t\t\t<br /><br />\r\n  \t\t\tAlright <span style={{color:\"#0c660b\",fontWeight:\"bold\"}}>JavaScript Jungle</span> explorers, sign up below and your guide will be in contact.\r\n  \t\t</p>\r\n  \t\t<div id=\"signature-div\">\r\n  \t\t\t<a href=\"technatalie.com\" target=\"_blank\" rel=\"noopener noreferrer\"><img  id=\"signature\" src=\"images/by_Natalie_Hall.gif\" alt=\"by Natalie Hall\" /></a>\r\n  \t\t</div>\r\n  \t</div>\r\n  )\r\n}\r\n\r\nexport default Info;","import React from \"react\";\r\n// import postscribe from 'postscribe';\r\n\r\nclass SubscriptionForm extends React.Component { \r\n\r\n  // componentDidMount() {\r\n  //   // postscribe(\"#script\",\"<script src='//web.webformscr.com/apps/fc3/build/loader.js' sp-form-id='3482dc1028115f249345d173b00076fa30757cc439b81069ac3bbd97b2ce3839'></script>\"); \r\n\r\n  //   postscribe(\"#script\",\"<script type='text/javascript' src='//web.webformscr.com/apps/fc3/build/default-handler.js?1591191285660'></script>\");\r\n  // }\r\n\r\n  render () {\r\n    return (\r\n      <div className=\"sp-form-outer\">\r\n        <div id=\"sp-form-157588\" sp-id=\"157588\" sp-hash=\"3482dc1028115f249345d173b00076fa30757cc439b81069ac3bbd97b2ce3839\" sp-lang=\"en\" className=\"sp-form sp-form-regular sp-form-embed\" sp-show-options=\"%7B%22satellite%22%3Afalse%2C%22maDomain%22%3A%22login.sendpulse.com%22%2C%22formsDomain%22%3A%22forms.sendpulse.com%22%2C%22condition%22%3A%22onEnter%22%2C%22scrollTo%22%3A25%2C%22delay%22%3A10%2C%22repeat%22%3A3%2C%22background%22%3A%22rgba(0%2C%200%2C%200%2C%200.5)%22%2C%22position%22%3A%22bottom-right%22%2C%22animation%22%3A%22%22%2C%22hideOnMobile%22%3Afalse%2C%22urlFilter%22%3Afalse%2C%22urlFilterConditions%22%3A%5B%7B%22force%22%3A%22hide%22%2C%22clause%22%3A%22contains%22%2C%22token%22%3A%22%22%7D%5D%2C%22analytics%22%3A%7B%22ga%22%3A%7B%22eventLabel%22%3A%22Subscription_form_My_emails%22%2C%22send%22%3Afalse%7D%2C%22ym%22%3A%7B%22counterId%22%3Anull%2C%22eventLabel%22%3Anull%2C%22targetId%22%3Anull%2C%22send%22%3Afalse%7D%7D%7D\">\r\n          <div><h2>Subscribe</h2></div>\r\n          <form noValidate=\"\" className=\"sp-element-container ui-sortable ui-droppable \">\r\n            <div className=\"sp-form-fields-wrapper\">\r\n              <div className=\"sp-message\">\r\n                <div>\r\n                </div>\r\n              </div>\r\n              <div className=\"sp-field \" sp-id=\"sp-30752364-6226-4cf7-9e03-722f199667d7\">\r\n                <label className=\"sp-control-label\"><span >Email</span><strong >*</strong></label>\r\n                <input type=\"email\" sp-type=\"email\" name=\"sform[email]\" className=\"sp-form-control \" placeholder=\"username@gmail.com\" sp-tips=\"%7B%22required%22%3A%22Required%20field%22%2C%22wrong%22%3A%22Wrong%20email%22%7D\" required=\"required\" />\r\n              </div>\r\n              <div className=\"sp-field \" sp-id=\"sp-09ac102d-a773-4851-b5f9-f24405dfb07d\">\r\n                <label className=\"sp-control-label\"><span >Name</span><strong >*</strong></label>\r\n                <input type=\"text\" sp-type=\"name\" name=\"sform[ODgyMjkwNTI=]\" className=\"sp-form-control \" placeholder=\"Full name\" sp-tips=\"%7B%22required%22%3A%22Required%20field%22%7D\" required=\"required\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"sp-field sp-button-container \" sp-id=\"sp-3a65e46d-b014-44da-9775-22718ea7007b\">\r\n              <button id=\"sp-3a65e46d-b014-44da-9775-22718ea7007b\" className=\"sp-button\">Submit</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SubscriptionForm;","import React from \"react\";\r\n\r\nfunction Footer() {\r\n\tconst currentYear = new Date().getFullYear();\r\n\r\n\treturn (\r\n\t\t<footer className=\"footer\">\r\n\t    <p>&copy; {currentYear} JavaScript Jungle</p>\r\n\t  </footer>\r\n  )\r\n}\r\n\r\nexport default Footer","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport QandA from \"./QandA\";\r\nimport Info from \"./Info\";\r\nimport SubscriptionForm from \"./SubscriptionForm\";\r\nimport Footer from \"./Footer\";\r\n\r\nclass App extends React.Component {\r\n\r\n  render () {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Header />\r\n\t\t\t\t<QandA />\r\n\t\t\t\t<Info />\r\n\t\t\t\t<SubscriptionForm />\r\n\t\t\t  <Footer />\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}